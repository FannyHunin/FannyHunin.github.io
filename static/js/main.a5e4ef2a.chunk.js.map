{"version":3,"sources":["sampleText.js","App.js","reportWebVitals.js","index.js"],"names":["sampleText","App","state","text","handleChange","event","target","value","setState","renderText","__html","marked","sanitize","localStorage","getItem","this","setItem","className","rows","onChange","dangerouslySetInnerHTML","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAAaA,EAAa,oe,OCwDXC,E,4MAjDbC,MAAQ,CACNC,KAAOH,G,EAoBTI,aAAe,SAACC,GACA,eAAQ,EAAKH,MAAMC,MAAjC,IACMA,EAAOE,EAAMC,OAAOC,MAC1B,EAAKC,SAAS,CAAEL,U,EAGlBM,WAAa,SAACN,GAGZ,MAAO,CAACO,OADOC,IAAOR,EAAM,CAACS,UAAS,M,uDAxBxC,WACE,IAAMT,EAAOU,aAAaC,QAAQ,QAE/BX,EACDY,KAAKP,SAAS,CAACL,SAEfY,KAAKP,SAAS,CAACL,KAAOH,M,gCAK1B,WACE,IAAMG,EAAOY,KAAKb,MAAMC,KACxBU,aAAaG,QAAQ,OAAQb,K,oBAe/B,WACE,OACE,qBAAKc,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,0BAAUA,UAAU,eAAeC,KAAK,KAAKX,MAAOQ,KAAKb,MAAMC,KAAMgB,SAAUJ,KAAKX,iBAEtF,qBAAKa,UAAU,WAAf,SACE,qBAAKG,wBAAyBL,KAAKN,WAAWM,KAAKb,MAAMC,mB,GA1CnDkB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5e4ef2a.chunk.js","sourcesContent":["export const sampleText = '# Titre\\n## Sous-Titre \\n### Sous-sous-titre\\n \\nLes paragraphes sont séparés\\npar une ligne vide.\\n\\nLaissé deux espaces à la fin d\\'une ligne pour  \\naller à la ligne.\\n\\nAttributs *italique*, **gras**, \\n`monospace`, ~~rayé~~.\\n\\nListe:\\n\\n  * pommes\\n  * oranges\\n  * poires\\n\\nListe numérotée:\\n\\n  1. jambon\\n  2. cornichon\\n  3. pain\\n\\n Lien automatique : https://www.facebook.com/profile.php?id=100008449512799\\n\\n```\\n console.log(\"hello\"); \\n``` '\n","import { Component } from 'react';\nimport './App.css';\nimport marked from 'marked'\n\nimport{sampleText} from './sampleText'\n\nclass App extends Component {\n  state = {\n    text : sampleText\n  }\n\n  //Lié à un component statefull, s'exécute au refresh de la page, quand le component se monte\n  componentDidMount(){\n    const text = localStorage.getItem('text');\n\n    if(text){\n      this.setState({text})\n    }else{\n      this.setState({text : sampleText});\n    }\n  }\n\n  //s'exécute quand le component se met à jour\n  componentDidUpdate(){\n    const text = this.state.text;\n    localStorage.setItem('text', text);\n  }\n\n  handleChange = (event) => {\n    const textCopy = {... this.state.text}\n    const text = event.target.value\n    this.setState({ text })\n  }\n\n  renderText = (text) => {\n    //sanitize fait partie de la bibliothèque marked, il supprime le rendu en balises des élements html dans le markdown editor\n    const __html = marked(text, {sanitize:true});\n    return {__html}\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <textarea className=\"form-control\" rows=\"35\" value={this.state.text} onChange={this.handleChange}></textarea>\n          </div>\n          <div className='col-sm-6'>\n            <div dangerouslySetInnerHTML={this.renderText(this.state.text)}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}